function introToMatlab()
% INTRODUCTION
% THIS EXAMPLE FUNCTION IS MEANT TO INTRODUCE MATLAB'S BASIC FUNCTIONALITY
% TO A USER WHO HAS LITTLE TO NO MATLAB EXPERIENCE.  IT INTRODUCES THE IDEA
% OF VARIABLES, VECTORS, ARRAYS, STRUCTURED VARIABLES, AND SOME BASIC UNIX
% COMMANDS. 
%
% by N.J. KUWADA, AUGUST 2011


%% SIMPLE NAVIGATION COMMANDS.
% MATLAB USES A MIX OF UNIX, DOS, AND BUILT-IN COMMANDS FOR NAVIGATION AND
% FILE OPERATIONS. FOR ABSOLUTE BEGINNERS, HERE ARE A FEW BASICS

% 'cd dirname' : change directories to 'dirname'

% 'cd ..'      : go up (back) a directory                                   

%  up-arrow    : bring up last command beginning with the letters typed     

%  tab-button  : tab completes commands beginning with the letters types    

%% VARIABLES IN THE WORKSPACE
% MATLAB CAN STORE MANY TYPES OF VARIABLES, E.G. NUMBERS, STRINGS, VECTORS,
% MATRICES, ETC.  VARIBLES THAT ARE BEING USED FOR A PARTICULAR CALCULATION
% ARE STORED IN THE 'WORKSPACE', WHICH CAN BE SEEN IN THE MATLAB WINDOW. IF
% A VARIABLE IS CREATED, YOU WILL SEE THE OUTPUT IN THE COMMAND WINDOW AS
% WELL AS LOADING INTO THE WORKSPACE WITH INFORMATION ABOUT THE VARIABLE.
% FOR EXAMPLE, LETS MAKE A VARIABLE 'A' WHICH IS A 4 ELEMENT VECTOR:

A = [1 2 3 4]

% IF YOU WANT TO CREATE THE VARIABLE BUT NOT HAVE IT OUTPUT TO THE COMMAND
% WINDOW, END THE LINE WITH A SEMI-COLON

A = [1 2 3 4] ;

% IF YOU WANT A COLUMN VECTOR INSTEAD OF A ROW VECTOR, USE THE APOSTROPHE
% T0 TRANSPOSE THE VECTOR:

A'

% IF YOU ARE CREATING A VECTOR WITH REGULARLY INCREASING OR DECREASING
% VALUES, USE THE COLON OPERATOR. 

A = [ 1:4 ]

% IF YOU WANT YOUR VECTOR IN INCREASE IN DIFFERENT INCREMENTS, ADD THE
% INCREMENT AMOUNT IN THE MIDDLE OF THE COLON OPERATOR:

B = [1:0.5:4]

C = [0:10:100]

%% MATRICES AND ARRAYS
% MATLAB STANDS FOR 'MATRIX LABORATORY', SO MATRICES ARE KIND OF A BIG
% DEAL. FOR OUR PURPOSES, IMAGES IN MATLAB ARE REPRESENTED AS MATRICES, SO
% ANY IMAGE MANIPULATION IS AKIN TO MATRIX MANIPULATION.  MUCH OF THE
% SYNTAX OF MATRICES IS SIMILAR TO THE VECTOR COMMANDS ABOVE, SINCE A
% VECTOR IS A 1xN MATRIX.  LET'S START BY DEFINING A 4x4 MATRIX:

M = [1 2 3 4 ; 5 6 7 8; 9 10 11 12 ; 13 14 15 16] 

% MATLAB CALLS MATRIX ELEMENTS AS (ROW,COLUMN), SUCH THAT THE ELEMENT IN
% THE SECOND ROW FIRST COLUMN IS CALLED BY

M(2,1)

% MATRIX ELEMENTS CAN ALSO BE CALLED AS ELEMENTS OF A LARGE VECTOR
% ORGANIZED AS ALL THE ROWS STACKED ON TOP OF EACH OTHER (ASSIDE: THIS IS
% ACTUALLY HOW MATLAB STORES VARIABLES IN MEMORY). SO M(2,1) CAN ALSO BE
% ACCESSED BY:

M(2)

%% BASIC MATRIX MANIPULATION TRICKS
% THERE ARE A COUPLE OF TRICKS THAT MAKE DEALING WITH MATRICES MUCH EASIER.
% HERE ARE A FEW THAT WE'LL USE LATER IN IMAGE MANIPULATION

%% LOGICAL ARGUMENTS 
% MATLAB CAN MAKE USE OF LOGICAL ARGUMENTS, SUCH AS INEQUALITIES AND
% EXISTENCE STATEMENTS, TO PICK OUT CERTAIN ELEMENTS OF MATRICES.  FOR
% INSTANCE, LETS FIND ALL VALUES OF THE MATRIX GREATER THAN 10:

M > 10

% YOU'LL NOTICE THIS GIVES A MATRIX OF LOGICAL VALUES, ZEROS AND ONES,
% WHERE THE INEQUALITY IS EITHER NOT SATIFIED OR SATISFIED.  IF WE WANT THE
% MATRIX ELEMENTS THAT CORRESPOND TO THIS, WE SIMPLY MULITPLU THIS ANSWER
% BY THE ORIGINAL MATRIX. NOTE THE PERIOD BEFORE THE MULTIPLICATION 
% OPERATOR.  THIS MEANS MULTIPLY THE MATRICES ELEMENT BY ELEMENT. 

M.*(M > 10)

% IF YOU JUST WANT A LIST OF THE VALUES, PASS THE INEQUALITY IN THE
% ORIGINAL MATRIX

M(M > 10)

%% STRUCTURED VARIABLES
% MATLAB CAN STORE AND ACCESS DATA IN MANY DIFFERENT WAYS. ONE CONVENIENT
% WAY IS A 'STRUCTURED VARIABLE'. A STRUCTURED VARIABLE IS SIMILAR TO A
% FILING CABINET, WHERE EACH DROOR HOLDS A DIFFERENT VARIABLE. THE DROOR NAME
% IS STORED IN THE ELEMENTS OF THE STRUCTURED VARIABLE. THIS ORGANIZATION
% ALLOWS FOR A SINGLE STRUCTURED VARIABLE TO STORE A BUNCH OF DIFFERENT
% TYPES AND SIZES OF INTERNAL DATA, E.G. IMAGES, FOCI COORDINATES, CELL 
% SIZES, ETC. LETS CALL OUR VARIABLE 'EXAMPS' 

EXAMPS.MATRIX = M ;
EXAMPS.VECTOR_A = A ;
EXAMPS.VECTOR_B = B ;

% NOW, TO GET THE LIST OF VARIABLES STORED IN OUR STRUCTURED VARIABLE, WE
% TYPE

EXAMPS

% TO SEE OUR MATRIX EXAMPLE, WE TYPE

EXAMPS.MATRIX

% TO GET THE SECOND ROW THIRD COLUMN ENTRY OF OUR MATRIX, WE TYPE

EXAMPS.MATRIX(2,3)

%% CELL VARIABLES
% VARIABLES OF DIFFERNT TYPE CAN ALSO BE STORED IN CELLS, WHICH IS SIMILAR
% TO STRUCTURED VARIABLES BUT WITHOUT THE NAMING SCHEME.  CELLS ALLOW FOR A
% SIMIALR INDEXING BEHAVIOR TO MATRICES, AND ARE MANY TIMES MORE 
% CONVENTIENT. CELLS ARE INDEXED BY CURLY BRACKETS, SUCH THAT

S{1} = M ;
S{2} = A ;
S{3} = B ;

% IF WE AGAIN WANT THE SECOND ROW THIRD COLUMN ELEMENT OF OUR MATIRX, WE
% NOW TYPE

S{1}(2,3)

% THIS INDEXING CAN BE PARTICULARY USEFUL IN LOOP OPERATIONS.

end